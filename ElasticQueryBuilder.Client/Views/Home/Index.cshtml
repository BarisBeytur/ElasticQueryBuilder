<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ElasticQueryBuilder</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f8f9fa;
        }

        .card {
            border: none;
            border-radius: 15px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .card-header {
            font-size: 1.25rem;
            font-weight: bold;
        }

        .btn-custom {
            width: 100%;
        }

        .form-label {
            font-weight: 600;
        }

        pre {
            background-color: #f1f1f1;
            padding: 10px;
            border-radius: 5px;
        }
    </style>
</head>
<body>
    <div class="container my-5">
        <h1 class="text-center mb-5">ElasticQueryBuilder</h1>
        <div class="row g-4">

            <!-- Login Form -->
            <div class="col-md-4">
                <div class="card border-primary">
                    <div class="card-header text-white bg-primary">Elasticsearch Credentials</div>
                    <div class="card-body">
                        <form id="loginForm">
                            <div class="mb-3">
                                <label for="username" class="form-label">Username</label>
                                <input type="text" id="username" class="form-control" placeholder="Enter your username">
                            </div>
                            <div class="mb-3">
                                <label for="password" class="form-label">Password</label>
                                <input type="password" id="password" class="form-control" placeholder="Enter your password">
                            </div>
                            <div class="mb-3">
                                <label for="fingerprint" class="form-label">SSL Fingerprint</label>
                                <input type="text" id="fingerprint" class="form-control" placeholder="Enter SSL fingerprint">
                            </div>
                            <div class="mb-3">
                                <label for="url" class="form-label">Elasticsearch URL</label>
                                <input type="text" id="url" class="form-control" placeholder="Enter Elasticsearch URL">
                            </div>
                            <button type="button" class="btn btn-primary btn-custom" onclick="loginElastic()">Save Credentials</button>
                        </form>
                    </div>
                </div>
            </div>

            <!-- Get Fields -->
            <div class="col-md-4">
                <div class="card border-success">
                    <div class="card-header text-white bg-success">Get Index Fields</div>
                    <div class="card-body">
                        <form id="fieldsForm">
                            <div class="mb-3">
                                <label for="indexName" class="form-label">Index Name</label>
                                <input type="text" id="indexName" class="form-control" placeholder="Enter index name">
                            </div>
                            <button type="button" class="btn btn-success btn-custom" onclick="getFields()">Get Fields</button>
                        </form>
                        <div id="fieldsResult" class="mt-3"></div>
                    </div>
                </div>
            </div>

            <!-- Build Query -->
            <div class="col-md-4">
                <div class="card border-info">
                    <div class="card-header text-white bg-info">Build Query</div>
                    <div class="card-body">
                        <form id="queryForm">
                            <div class="mb-3">
                                <label for="queryIndex" class="form-label">Index Name</label>
                                <input type="text" id="queryIndex" class="form-control" placeholder="Enter index name">
                            </div>
                            <div class="mb-3">
                                <label for="filters" class="form-label">Filters (JSON Format)</label>
                                <textarea id="filters" class="form-control" rows="4" placeholder='{"field1": "value1", "field2": "value2"}'></textarea>
                            </div>
                            <button type="button" class="btn btn-info btn-custom" onclick="buildQuery()">Build Query</button>
                        </form>
                        <div id="queryResult" class="mt-3"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
        let elasticCredentials = {};

        function loginElastic() {
            const username = document.getElementById("username").value;
            const password = document.getElementById("password").value;
            const fingerprint = document.getElementById("fingerprint").value;
            const url = document.getElementById("url").value;

            elasticCredentials = { username, password, fingerprint, url };

            // Store in localStorage for later use
            localStorage.setItem("elasticCredentials", JSON.stringify(elasticCredentials));

            alert("Credentials successfuly stored!");
        }

        async function getFields() {
            const indexName = document.getElementById("indexName").value.trim();
            const credentials = JSON.parse(localStorage.getItem("elasticCredentials"));

            if (!credentials) {
                alert("Please log in before attempting to fetch fields.");
                return;
            }

            if (!indexName) {
                alert("Please enter an index name.");
                return;
            }

            const apiUrl = `https://localhost:7021/api/Query/fields/${indexName}`;
            const headers = {
                "Content-Type": "application/json",
                "username": credentials.username,
                "password": credentials.password,
                "fingerprint": credentials.fingerprint,
                "url": credentials.url
            };

            try {
                const response = await fetch(apiUrl, {
                    method: 'GET',
                    headers: headers
                });
                const data = await response.json();

                if (response.ok) {
                    console.log("Fields fetched successfully:", data);
                    displayFieldsInTable(data);
                } else {
                    console.error("Error fetching fields:", data);
                    alert("Error fetching fields: " + data);
                }
            } catch (error) {
                console.error("Network error:", error);
                alert("Network error: " + error.message);
            }
        }

        function displayFieldsInTable(fields) {
            const fieldsResultDiv = document.getElementById("fieldsResult");

            let tableHtml = `
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>Field Name</th>
                                    <th>Field Type</th>
                                </tr>
                            </thead>
                            <tbody>
                    `;

            fields.forEach(field => {
                const fieldParts = field.split(":");
                const fieldName = fieldParts[0].trim();
                const fieldType = fieldParts[1].trim();

                tableHtml += `
                            <tr>
                                <td>${fieldName}</td>
                                <td>${fieldType}</td>
                            </tr>
                        `;
            });

            tableHtml += `</tbody></table>`;

            fieldsResultDiv.innerHTML = tableHtml;
        }



        async function buildQuery() {
            const queryIndex = document.getElementById("queryIndex").value.trim();
            const filters = document.getElementById("filters").value.trim();

            const credentials = JSON.parse(localStorage.getItem("elasticCredentials"));

            if (!credentials) {
                alert("Please login first.");
                return;
            }

            if (!queryIndex) {
                alert("Please enter an index name.");
                return;
            }

            const queryRequest = {
                index: queryIndex,
                filters: filters ? JSON.parse(filters) : {}
            };

            const apiUrl = `https://localhost:7021/api/Query/build-query`;

            try {
                const response = await fetch(apiUrl, {
                    method: 'POST',
                    headers: {
                        "Content-Type": "application/json",
                        "username": credentials.username,
                        "password": credentials.password,
                        "fingerprint": credentials.fingerprint,
                        "url": credentials.url
                    },
                    body: JSON.stringify(queryRequest)
                });

                const data = await response.json();

                if (response.ok) {
                    console.log("Query result:", data);
                    // Burada gelen sonucu tablonun içinde gösterebilirsiniz
                    document.getElementById("queryResult").innerHTML = `<pre>${JSON.stringify(data, null, 2)}</pre>`;
                } else {
                    console.error("Error building query:", data);
                    alert("Error building query: " + data);
                }
            } catch (error) {
                console.error("Network error:", error);
                alert("Network error: " + error.message);
            }
        }

    </script>

</body>
</html>
